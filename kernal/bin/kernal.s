;
; File generated by cc65 v 2.18 - Git ece63f0
;
	.fopt		compiler,"cc65 v 2.18 - Git ece63f0"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_cursor_index
	.export		_s
	.export		_ind
	.export		_putc
	.export		_set_fg
	.export		_set_bg
	.export		_NMI_HANDLER
	.export		_IRQ_HANDLER
	.export		_main

.segment	"DATA"

_cursor_index:
	.word	$0000
_s:
	.addr	L0002
_ind:
	.word	$0000

.segment	"RODATA"

L0002:
	.byte	$48,$65,$6C,$6C,$6F,$20,$4D,$72,$2E,$20,$43,$72,$61,$73,$68,$00

; ---------------------------------------------------------------
; void __near__ putc (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_putc: near

.segment	"CODE"

	jsr     pusha
	lda     _cursor_index
	ldx     _cursor_index+1
	sta     $BD80
	stx     $BD80+1
	ldx     #$00
	lda     #$03
	sta     $BD82
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	sta     $BD83
	ldx     #$00
	lda     #$C0
	sta     $BD84
	lda     _cursor_index
	ldx     _cursor_index+1
	sta     regsave
	stx     regsave+1
	ina
	bne     L0013
	inx
L0013:	sta     _cursor_index
	stx     _cursor_index+1
	lda     regsave
	ldx     regsave+1
	jsr     incsp1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ set_fg (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_fg: near

.segment	"CODE"

	jsr     pusha
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	sta     $BD85
	jsr     incsp1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ set_bg (unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_bg: near

.segment	"CODE"

	jsr     pusha
	ldy     #$00
	ldx     #$00
	lda     (sp),y
	sta     $BD86
	jsr     incsp1
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ NMI_HANDLER (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_NMI_HANDLER: near

.segment	"CODE"

	rts

.endproc

; ---------------------------------------------------------------
; void __near__ IRQ_HANDLER (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_IRQ_HANDLER: near

.segment	"CODE"

	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$FF
	jsr     _set_fg
	ldx     #$00
	lda     #$00
	sta     _ind
	stx     _ind+1
L0021:	lda     _s
	ldx     _s+1
	jsr     pushax
	lda     _ind
	ldx     _ind+1
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	cmp     #$00
	jsr     boolne
	jne     L0024
	jmp     L0022
L0024:	lda     _s
	ldx     _s+1
	jsr     pushax
	lda     _ind
	ldx     _ind+1
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	jsr     _putc
	lda     _ind
	ldx     _ind+1
	sta     regsave
	stx     regsave+1
	ina
	bne     L002A
	inx
L002A:	sta     _ind
	stx     _ind+1
	lda     regsave
	ldx     regsave+1
	jmp     L0021
L0022:	lda     #$41
	jsr     _putc
L0030:	jmp     L0033
L0032:	jmp     L0030
L0033:	jmp     L0032
	ldx     #$00
	lda     #$00
	jmp     L001E
L001E:	rts

.endproc

